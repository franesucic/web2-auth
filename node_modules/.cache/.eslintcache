[{"/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/index.js":"1","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/App.js":"2","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/tournament.js":"3","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/components/Body.js":"4","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/firebase.js":"5"},{"size":459,"mtime":1698162091524,"results":"6","hashOfConfig":"7"},{"size":520,"mtime":1698316645914,"results":"8","hashOfConfig":"7"},{"size":19803,"mtime":1698487354884,"results":"9","hashOfConfig":"7"},{"size":11467,"mtime":1698487957010,"results":"10","hashOfConfig":"7"},{"size":511,"mtime":1698251495702,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pjnkpz",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/index.js",[],[],"/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/App.js",[],[],"/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/tournament.js",["29","30","31"],[],"import React, {useEffect} from 'react';\nimport { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {firestore} from \"./firebase\"\nimport {getDocs, collection, setDoc, doc} from \"@firebase/firestore\"\nimport { useNavigate } from 'react-router-dom';\n\nfunction Tournament() {\n\n    const { loginWithRedirect, logout, user, isAuthenticated } = useAuth0();\n\n    const ref = collection(firestore, \"natjecanja\");\n    const [currTour, setCurrTour] = useState({});\n    const [firstTeam, setFirstTeam] = useState(\"\");\n    const [secondTeam, setSecondTeam] = useState(\"\");\n    const [firstPoints, setFirstPoints] = useState();\n    const [secondPoints, setSecondPoints] = useState();\n    const [show, setShow] = useState(false);\n    const [table, setTable] = useState([]);\n\n    const navigate = useNavigate();\n\n    let points = [-1,-1,-1,-1,-1,-1,-1,-1];\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const querySnapshot = await getDocs(ref);\n                const documents = querySnapshot.docs.map((doc) => ({...doc.data(), id:doc.id }));\n                for (let i = 0; i < documents.length; ++i) {\n                    //if (documents[i].kreator === user.email) {\n                        if (documents[i].id === localStorage.getItem(1)) {\n                        let obj = {\n                            id: documents[i].id,\n                            naziv: documents[i].naziv,\n                            kreator: documents[i].kreator,\n                            pobjeda: documents[i].pobjeda,\n                            remi: documents[i].remi,\n                            poraz: documents[i].poraz,\n                            igre: documents[i].igre,\n                            sudionici: documents[i].sudionici\n                        }\n                        setCurrTour(obj);\n                    }\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        fetchData();\n    },[]);\n\n    const handleFirstTeamChange = (e) => {\n        setFirstTeam(e.target.value);\n    }\n\n    const handleSecondTeamChange = (e) => {\n        setSecondTeam(e.target.value);\n    }\n\n    const handleFirstPointsChange = (e) => {\n        if (!isNaN(e.target.value)) setFirstPoints(e.target.value);\n    }\n\n    const handleSecondPointsChange = (e) => {\n        if (!isNaN(e.target.value)) setSecondPoints(e.target.value);\n    }\n\n    const handleLogout = async (e) => {\n        try {\n          await logout(); \n          navigate(\"/\");\n        } catch (error) {\n            console.log(\"Something went wrong.\");\n        }\n      };\n\n    const handleShowTable = (e) => {\n        \n        for (let i = 0; i < currTour.sudionici.length; ++i) {\n            for (let j = 0; j < currTour.igre.length; ++j) {\n                if (currTour.igre[j].split(\"-\").length > 3) {\n                    if (currTour.igre[j].split(\"-\")[1] === currTour.sudionici[i]) {\n                        if (currTour.igre[j].split(\"-\")[3] > currTour.igre[j].split(\"-\")[4]) {\n                            points[i] += parseFloat(currTour.pobjeda);\n                        } else if (currTour.igre[j].split(\"-\")[3] === currTour.igre[j].split(\"-\")[4]) {\n                            points[i] += parseFloat(currTour.remi);\n                        } else if (currTour.igre[j].split(\"-\")[3] < currTour.igre[j].split(\"-\")[4]) {\n                            points[i] += parseFloat(currTour.poraz);\n                        }\n                    } else if (currTour.igre[j].split(\"-\")[2] === currTour.sudionici[i]) {\n                        if (currTour.igre[j].split(\"-\")[4] > currTour.igre[j].split(\"-\")[3]) {\n                            points[i] += parseFloat(currTour.pobjeda);\n                        } else if (currTour.igre[j].split(\"-\")[4] === currTour.igre[j].split(\"-\")[3]) {\n                            points[i] += parseFloat(currTour.remi);\n                        } else if (currTour.igre[j].split(\"-\")[4] < currTour.igre[j].split(\"-\")[3]) {\n                            points[i] += parseFloat(currTour.poraz);\n                        }\n                    }\n                }\n            }\n        }\n        for (let i = 0; i < currTour.sudionici.length; ++i) {\n            points[i] += 1;\n        }\n        while (points.length > currTour.sudionici.length) points.pop();\n        for (let i = 0; i < points.length; ++i) {\n            points[i] = points[i] + \" \" + currTour.sudionici[i];\n        }\n        points.sort((a, b) => {\n        const brojA = parseFloat(a.match(/^\\d+/)[0]);\n        const brojB = parseFloat(b.match(/^\\d+/)[0]);\n        return brojB - brojA;\n        });\n        setTable(points);\n        setShow(!show);\n    }\n\n    const handleResultInput = async (e) => {\n        let obj = [];\n\n        const firstPromise = new Promise((resolve, reject) => {\n        for (let i = 0; i < currTour.igre.length; ++i) {\n            obj.push(currTour.igre[i]);\n            if ((currTour.igre[i].split(\"-\")[1].trim() === firstTeam) && (currTour.igre[i].split(\"-\")[2].trim() === secondTeam)) {\n                let newString = \"\";\n                if (currTour.igre[i].split(\"-\").length > 3) {\n                    newString = currTour.igre[i].split(\"-\")[0].trim() + \"-\" + currTour.igre[i].split(\"-\")[1].trim() + \"-\" + currTour.igre[i].split(\"-\")[2].trim() + \"-\" + firstPoints + \"-\" + secondPoints;\n                } else {\n                    newString = currTour.igre[i] + \"-\" + firstPoints + \"-\" + secondPoints;\n                }\n                obj.pop();\n                obj.push(newString);\n            } \n        }\n        resolve();\n        });\n        \n        const secondPromise = new Promise((resolve, reject) => {\n            if (isNaN(firstPoints) || isNaN(secondPoints)) {\n                alert(\"Unesite brojke u polje za rezultat\");\n                return;\n            } else {\n                let nasao1 = false;\n                let nasao2 = false;\n                for (let i = 0; i < currTour.sudionici.length; ++i) {\n                    if (firstTeam === currTour.sudionici[i]) nasao1 = true;\n                    if (secondTeam === currTour.sudionici[i]) nasao2 = true;\n                }\n                if (nasao1 && nasao2) {\n                    updateDocument(currTour.id, {igre: obj}).then(() => window.location.reload());\n                    resolve();\n                } else {\n                    alert(\"Utakmica nije pronađena, provjerite nazive momčadi.\");\n                    return\n                }\n                \n            }\n        });\n\n        try {\n            await Promise.all([firstPromise, secondPromise]);\n        } catch(e) {\n            console.log(e);\n        }\n        \n    } \n\n    const updateDocument = async (documentId, newData) => {\n        const docRef = doc(firestore, \"natjecanja\", documentId);\n        try {\n          await setDoc(docRef, newData, { merge: true });\n          console.log(\"Dokument ažuriran uspješno.\");\n        } catch (error) {\n          console.error(\"Greška prilikom ažuriranja dokumenta:\", error);\n        }\n      };\n\n    return(\n    <>\n        <div className='table-title'>\n            <div>REZULTATI</div>\n            <div>{currTour.naziv}</div>\n        </div>\n        { isAuthenticated ? <div id='logout-div'>\n            <button onClick={handleLogout}>Odjava</button>\n        </div> : \"\"}\n        <div className='container'>\n        <div className='table-div'>\n            <table>\n                {currTour.naziv ?<> <thead>\n                    <tr><td id=\"round\">Kolo</td><td>Prva momčad</td><td>Druga Momčad</td><td>Rezultat</td></tr>\n                </thead>\n                <tr>\n                    <td id=\"round\">{currTour.igre[0].split(\"-\")[0]}.</td><td>{currTour.igre[0].split(\"-\")[1]}</td><td>{currTour.igre[0].split(\"-\")[2]}</td><td>{currTour.igre[0].split(\"-\")[3]} : {currTour.igre[0].split(\"-\")[4]}</td>\n                </tr>\n                <tr>\n                    <td id=\"round\">{currTour.igre[1].split(\"-\")[0]}.</td><td>{currTour.igre[1].split(\"-\")[1]}</td><td>{currTour.igre[1].split(\"-\")[2]}</td><td>{currTour.igre[1].split(\"-\")[3]} : {currTour.igre[1].split(\"-\")[4]}</td>\n                </tr>\n                <tr>\n                    <td id=\"round\">{currTour.igre[2].split(\"-\")[0]}.</td><td>{currTour.igre[2].split(\"-\")[1]}</td><td>{currTour.igre[2].split(\"-\")[2]}</td><td>{currTour.igre[2].split(\"-\")[3]} : {currTour.igre[2].split(\"-\")[4]}</td>\n                </tr>\n                <tr>\n                    <td id=\"round\">{currTour.igre[3].split(\"-\")[0]}.</td><td>{currTour.igre[3].split(\"-\")[1]}</td><td>{currTour.igre[3].split(\"-\")[2]}</td><td>{currTour.igre[3].split(\"-\")[3]} : {currTour.igre[3].split(\"-\")[4]}</td>\n                </tr>\n                <tr>\n                    <td id=\"round\">{currTour.igre[4].split(\"-\")[0]}.</td><td>{currTour.igre[4].split(\"-\")[1]}</td><td>{currTour.igre[4].split(\"-\")[2]}</td><td>{currTour.igre[4].split(\"-\")[3]} : {currTour.igre[4].split(\"-\")[4]}</td>\n                </tr>\n                <tr>\n                    <td id=\"round\">{currTour.igre[5].split(\"-\")[0]}.</td><td>{currTour.igre[5].split(\"-\")[1]}</td><td>{currTour.igre[5].split(\"-\")[2]}</td><td>{currTour.igre[5].split(\"-\")[3]} : {currTour.igre[5].split(\"-\")[4]}</td>\n                </tr> </>: \"\"}\n                {\n                    currTour.naziv && currTour.sudionici.length > 4 ?\n                        <>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[6].split(\"-\")[0]}.</td><td>{currTour.igre[6].split(\"-\")[1]}</td><td>{currTour.igre[6].split(\"-\")[2]}</td><td>{currTour.igre[6].split(\"-\")[3]} : {currTour.igre[6].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[7].split(\"-\")[0]}.</td><td>{currTour.igre[7].split(\"-\")[1]}</td><td>{currTour.igre[7].split(\"-\")[2]}</td><td>{currTour.igre[7].split(\"-\")[3]} : {currTour.igre[7].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[8].split(\"-\")[0]}.</td><td>{currTour.igre[8].split(\"-\")[1]}</td><td>{currTour.igre[8].split(\"-\")[2]}</td><td>{currTour.igre[8].split(\"-\")[3]} : {currTour.igre[8].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[9].split(\"-\")[0]}.</td><td>{currTour.igre[9].split(\"-\")[1]}</td><td>{currTour.igre[9].split(\"-\")[2]}</td><td>{currTour.igre[9].split(\"-\")[3]} : {currTour.igre[9].split(\"-\")[4]}</td>\n                            </tr>\n                        </>\n                    : \"\"\n                }\n                {\n                    currTour.naziv && currTour.sudionici.length > 5 ?\n                        <>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[10].split(\"-\")[0]}.</td><td>{currTour.igre[10].split(\"-\")[1]}</td><td>{currTour.igre[10].split(\"-\")[2]}</td><td>{currTour.igre[10].split(\"-\")[3]} : {currTour.igre[10].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[11].split(\"-\")[0]}.</td><td>{currTour.igre[11].split(\"-\")[1]}</td><td>{currTour.igre[11].split(\"-\")[2]}</td><td>{currTour.igre[11].split(\"-\")[3]} : {currTour.igre[11].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[12].split(\"-\")[0]}.</td><td>{currTour.igre[12].split(\"-\")[1]}</td><td>{currTour.igre[12].split(\"-\")[2]}</td><td>{currTour.igre[12].split(\"-\")[3]} : {currTour.igre[12].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[13].split(\"-\")[0]}.</td><td>{currTour.igre[13].split(\"-\")[1]}</td><td>{currTour.igre[13].split(\"-\")[2]}</td><td>{currTour.igre[13].split(\"-\")[3]} : {currTour.igre[13].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[14].split(\"-\")[0]}.</td><td>{currTour.igre[14].split(\"-\")[1]}</td><td>{currTour.igre[14].split(\"-\")[2]}</td><td>{currTour.igre[14].split(\"-\")[3]} : {currTour.igre[14].split(\"-\")[4]}</td>\n                            </tr>\n                        </>\n                    : \"\"\n                }\n                {\n                    currTour.naziv && currTour.sudionici.length > 6 ?\n                        <>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[15].split(\"-\")[0]}.</td><td>{currTour.igre[15].split(\"-\")[1]}</td><td>{currTour.igre[15].split(\"-\")[2]}</td><td>{currTour.igre[15].split(\"-\")[3]} : {currTour.igre[15].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[16].split(\"-\")[0]}.</td><td>{currTour.igre[16].split(\"-\")[1]}</td><td>{currTour.igre[16].split(\"-\")[2]}</td><td>{currTour.igre[16].split(\"-\")[3]} : {currTour.igre[16].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[17].split(\"-\")[0]}.</td><td>{currTour.igre[17].split(\"-\")[1]}</td><td>{currTour.igre[17].split(\"-\")[2]}</td><td>{currTour.igre[17].split(\"-\")[3]} : {currTour.igre[17].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[18].split(\"-\")[0]}.</td><td>{currTour.igre[18].split(\"-\")[1]}</td><td>{currTour.igre[18].split(\"-\")[2]}</td><td>{currTour.igre[18].split(\"-\")[3]} : {currTour.igre[18].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[19].split(\"-\")[0]}.</td><td>{currTour.igre[19].split(\"-\")[1]}</td><td>{currTour.igre[19].split(\"-\")[2]}</td><td>{currTour.igre[19].split(\"-\")[3]} : {currTour.igre[19].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[20].split(\"-\")[0]}.</td><td>{currTour.igre[20].split(\"-\")[1]}</td><td>{currTour.igre[20].split(\"-\")[2]}</td><td>{currTour.igre[20].split(\"-\")[3]} : {currTour.igre[20].split(\"-\")[4]}</td>\n                            </tr>\n                        </>\n                    : \"\"\n                }\n                {\n                    currTour.naziv && currTour.sudionici.length > 7 ?\n                        <>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[21].split(\"-\")[0]}.</td><td>{currTour.igre[21].split(\"-\")[1]}</td><td>{currTour.igre[21].split(\"-\")[2]}</td><td>{currTour.igre[21].split(\"-\")[3]} : {currTour.igre[21].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[22].split(\"-\")[0]}.</td><td>{currTour.igre[22].split(\"-\")[1]}</td><td>{currTour.igre[22].split(\"-\")[2]}</td><td>{currTour.igre[22].split(\"-\")[3]} : {currTour.igre[22].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[23].split(\"-\")[0]}.</td><td>{currTour.igre[23].split(\"-\")[1]}</td><td>{currTour.igre[23].split(\"-\")[2]}</td><td>{currTour.igre[23].split(\"-\")[3]} : {currTour.igre[23].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[24].split(\"-\")[0]}.</td><td>{currTour.igre[24].split(\"-\")[1]}</td><td>{currTour.igre[24].split(\"-\")[2]}</td><td>{currTour.igre[24].split(\"-\")[3]} : {currTour.igre[24].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[25].split(\"-\")[0]}.</td><td>{currTour.igre[25].split(\"-\")[1]}</td><td>{currTour.igre[25].split(\"-\")[2]}</td><td>{currTour.igre[25].split(\"-\")[3]} : {currTour.igre[25].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[26].split(\"-\")[0]}.</td><td>{currTour.igre[26].split(\"-\")[1]}</td><td>{currTour.igre[26].split(\"-\")[2]}</td><td>{currTour.igre[26].split(\"-\")[3]} : {currTour.igre[26].split(\"-\")[4]}</td>\n                            </tr>\n                            <tr>\n                                <td id=\"round\">{currTour.igre[27].split(\"-\")[0]}.</td><td>{currTour.igre[27].split(\"-\")[1]}</td><td>{currTour.igre[27].split(\"-\")[2]}</td><td>{currTour.igre[27].split(\"-\")[3]} : {currTour.igre[27].split(\"-\")[4]}</td>\n                            </tr>\n                        </>\n                    : \"\"\n                }\n            </table>\n        </div>\n        { isAuthenticated ? <div>\n            <div className='result-input-div'>\n                <div>UNOS REZULTATA UTAKMICE:</div>\n                <label>Prva momčad </label><input type='text' onChange={handleFirstTeamChange}></input>\n                <label>Druga momčad </label><input type='text' onChange={handleSecondTeamChange}></input>\n                <label>Rezultat</label><div id=\"res-div\"><input type='text' className='num-input' onChange={handleFirstPointsChange}></input><input type='text' className='num-input' onChange={handleSecondPointsChange}></input></div>\n                <button onClick={handleResultInput}>Unesi</button>\n            </div>\n            \n             </div> : \"\" }\n        </div>\n        <div id=\"title\"><button id=\"show-table\" onClick={handleShowTable}>{show ? \"Sakrij poredak\" : \"Prikaži poredak\"}</button></div>\n        {show ? <>\n        <div id=\"title\">POREDAK NA TABLICI</div>\n        <div className='container'>\n            <table>\n                <thead>\n                    <tr>\n                        <td>MJESTO</td><td>MOMČAD</td><td>BODOVI</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1.</td><td>{table[0].split(\" \")[1]}</td><td>{table[0].split(\" \")[0]}</td>\n                    </tr>\n                    <tr>\n                        <td>2.</td><td>{table[1].split(\" \")[1]}</td><td>{table[1].split(\" \")[0]}</td>\n                    </tr>\n                    <tr>\n                        <td>3.</td><td>{table[2].split(\" \")[1]}</td><td>{table[2].split(\" \")[0]}</td>\n                    </tr>\n                    <tr>\n                        <td>4.</td><td>{table[3].split(\" \")[1]}</td><td>{table[3].split(\" \")[0]}</td>\n                    </tr>\n                    {currTour.sudionici.length > 4 ?\n                    <tr>\n                        <td>5.</td><td>{table[4].split(\" \")[1]}</td><td>{table[4].split(\" \")[0]}</td>\n                    </tr>\n                : \"\"}\n                {currTour.sudionici.length > 5 ?\n                    <tr>\n                        <td>6.</td><td>{table[5].split(\" \")[1]}</td><td>{table[5].split(\" \")[0]}</td>\n                    </tr>\n                : \"\"}\n                {currTour.sudionici.length > 6 ?\n                    <tr>\n                        <td>7.</td><td>{table[6].split(\" \")[1]}</td><td>{table[6].split(\" \")[0]}</td>\n                    </tr>\n                : \"\"}\n                {currTour.sudionici.length > 7 ?\n                    <tr>\n                        <td>8.</td><td>{table[7].split(\" \")[1]}</td><td>{table[7].split(\" \")[0]}</td>\n                    </tr>\n                : \"\"}\n                </tbody>\n            </table>\n        </div> </>: \"\"}\n    </>    \n    )\n\n}\n\nexport default Tournament;","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/components/Body.js",["32","33"],[],"import React, {useEffect} from 'react';\nimport { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {firestore} from \"../firebase\"\nimport {getDocs, addDoc, collection} from \"@firebase/firestore\"\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction Body() {\n\n    // STATES\n\n    const { loginWithRedirect, logout, user, isAuthenticated } = useAuth0();\n    const [name, setName] = useState(\"\");\n    const [playerString, setPlayerString] = useState(\"\");\n    const [win, setWin] = useState();\n    const [tie, setTie] = useState();\n    const [loss, setLoss] = useState();\n    const [nameError, setNameError] = useState(false);\n    const [formatError, setFormatError] = useState(false);\n    const [playersError, setPlayersError] = useState(false);\n    const [players, setPlayers] = useState([]);\n    const [games, setGames] = useState([]);\n    const [tournaments, setTournaments] = useState([]);\n\n    const ref = collection(firestore, \"natjecanja\");\n    const navigate = useNavigate();\n\n      function generateRounds() {\n        if (players.length === 4) {\n            games.push(\"1-\" + players[0]+\"-\"+players[3]);\n            games.push(\"1-\" + players[1]+\"-\"+players[2]);\n            games.push(\"2-\" + players[0]+\"-\"+players[1]);\n            games.push(\"2-\" + players[2]+\"-\"+players[3]);\n            games.push(\"3-\" + players[2]+\"-\"+players[0]);\n            games.push(\"3-\" + players[3]+\"-\"+players[1]);\n        } else if (players.length === 5) {\n            games.push(\"1-\" + players[0]+\"-\"+players[1]);\n            games.push(\"1-\" + players[4]+\"-\"+players[3]);\n            games.push(\"2-\" + players[1]+\"-\"+players[2]);\n            games.push(\"2-\" + players[4]+\"-\"+players[0]);\n            games.push(\"3-\" + players[2]+\"-\"+players[0]);\n            games.push(\"3-\" + players[1]+\"-\"+players[3]);\n            games.push(\"4-\" + players[2]+\"-\"+players[3]);\n            games.push(\"4-\" + players[4]+\"-\"+players[1]);\n            games.push(\"5-\" + players[0]+\"-\"+players[3]);\n            games.push(\"5-\" + players[2]+\"-\"+players[4]);\n        } else if (players.length === 6) {\n            games.push(\"1-\" + players[0]+\"-\"+players[5]);\n            games.push(\"1-\" + players[1]+\"-\"+players[4]);\n            games.push(\"1-\" + players[2]+\"-\"+players[3]);\n            games.push(\"2-\" + players[1]+\"-\"+players[5]);\n            games.push(\"2-\" + players[2]+\"-\"+players[0]);\n            games.push(\"2-\" + players[3]+\"-\"+players[4]);\n            games.push(\"3-\" + players[2]+\"-\"+players[5]);\n            games.push(\"3-\" + players[3]+\"-\"+players[1]);\n            games.push(\"3-\" + players[4]+\"-\"+players[0]);\n            games.push(\"4-\" + players[3]+\"-\"+players[5]);\n            games.push(\"4-\" + players[4]+\"-\"+players[2]);\n            games.push(\"4-\" + players[0]+\"-\"+players[1]);\n            games.push(\"5-\" + players[4]+\"-\"+players[5]);\n            games.push(\"5-\" + players[0]+\"-\"+players[3]);\n            games.push(\"5-\" + players[1]+\"-\"+players[2]);\n        } else if (players.length === 7) {\n            games.push(\"1-\" + players[0]+\"-\"+players[1]);\n            games.push(\"1-\" + players[2]+\"-\"+players[3]);\n            games.push(\"1-\" + players[4]+\"-\"+players[5]);\n            games.push(\"2-\" + players[0]+\"-\"+players[2]);\n            games.push(\"2-\" + players[1]+\"-\"+players[3]);\n            games.push(\"2-\" + players[5]+\"-\"+players[6]);\n            games.push(\"3-\" + players[0]+\"-\"+players[3]);\n            games.push(\"3-\" + players[1]+\"-\"+players[4]);\n            games.push(\"3-\" + players[5]+\"-\"+players[6]);\n            games.push(\"4-\" + players[0]+\"-\"+players[4]);\n            games.push(\"4-\" + players[2]+\"-\"+players[5]);\n            games.push(\"4-\" + players[1]+\"-\"+players[6]);\n            games.push(\"5-\" + players[0]+\"-\"+players[5]);\n            games.push(\"5-\" + players[4]+\"-\"+players[6]);\n            games.push(\"5-\" + players[3]+\"-\"+players[1]);\n            games.push(\"6-\" + players[0]+\"-\"+players[6]);\n            games.push(\"6-\" + players[5]+\"-\"+players[1]);\n            games.push(\"6-\" + players[3]+\"-\"+players[2]);\n            games.push(\"7-\" + players[1]+\"-\"+players[2]);\n            games.push(\"7-\" + players[6]+\"-\"+players[3]);\n            games.push(\"7-\" + players[5]+\"-\"+players[4]);\n        } else {\n            console.log(players);\n            games.push(\"1-\" + players[0]+\"-\"+players[7]);\n            games.push(\"1-\" + players[1]+\"-\"+players[6]);\n            games.push(\"1-\" + players[2]+\"-\"+players[5]);\n            games.push(\"1-\" + players[3]+\"-\"+players[4]);\n            games.push(\"2-\" + players[1]+\"-\"+players[7]);\n            games.push(\"2-\" + players[2]+\"-\"+players[0]);\n            games.push(\"2-\" + players[3]+\"-\"+players[6]);\n            games.push(\"2-\" + players[4]+\"-\"+players[5]);\n            games.push(\"3-\" + players[2]+\"-\"+players[7]);\n            games.push(\"3-\" + players[3]+\"-\"+players[1]);\n            games.push(\"3-\" + players[4]+\"-\"+players[0]);\n            games.push(\"3-\" + players[5]+\"-\"+players[6]);\n            games.push(\"4-\" + players[3]+\"-\"+players[7]);\n            games.push(\"4-\" + players[4]+\"-\"+players[2]);\n            games.push(\"4-\" + players[5]+\"-\"+players[1]);\n            games.push(\"4-\" + players[6]+\"-\"+players[0]);\n            games.push(\"5-\" + players[4]+\"-\"+players[7]);\n            games.push(\"5-\" + players[5]+\"-\"+players[3]);\n            games.push(\"5-\" + players[6]+\"-\"+players[2]);\n            games.push(\"5-\" + players[0]+\"-\"+players[1]);\n            games.push(\"6-\" + players[5]+\"-\"+players[7]);\n            games.push(\"6-\" + players[6]+\"-\"+players[4]);\n            games.push(\"6-\" + players[0]+\"-\"+players[3]);\n            games.push(\"6-\" + players[1]+\"-\"+players[2]);\n            games.push(\"7-\" + players[6]+\"-\"+players[7]);\n            games.push(\"7-\" + players[0]+\"-\"+players[5]);\n            games.push(\"7-\" + players[1]+\"-\"+players[4]);\n            games.push(\"7-\" + players[2]+\"-\"+players[3]);\n        }\n      }\n\n      useEffect(() => {\n        const fetchData = async () => {\n          try {\n              const querySnapshot = await getDocs(ref);\n              const documents = querySnapshot.docs.map((doc) => ({...doc.data(), id:doc.id }));\n              setTournaments(documents)\n          } catch (err) {\n              console.log(err);\n          }\n      };\n      fetchData();\n      },[]);\n\n    // HANDLER FUNCTIONS\n\n    const handleUserInput = async (e) => {\n        e.preventDefault();\n\n        const nameValidationPromise = new Promise((resolve, reject) => {\n            if (name.length < 3) {\n                setNameError(true);\n                reject(new Error('Invalid name'));\n              } else {\n                setNameError(false);\n                resolve();\n              }\n        });\n      \n        const playersValidationPromise = new Promise((resolve, reject) => {\n          if (players.length < 4 || players.length > 8) {\n            setPlayersError(true);\n            reject(new Error('Invalid number of players'));\n          } else {\n            setPlayersError(false);\n            resolve();\n          }\n        });\n      \n        const formatValidationPromise = new Promise((resolve, reject) => {\n          if (isNaN(win) || isNaN(tie) || isNaN(loss)) {\n            setFormatError(true);\n            reject(new Error('Invalid format'));\n          } else {\n            setFormatError(false);\n            resolve();\n          }\n        });\n      \n        try {\n          await Promise.all([nameValidationPromise, playersValidationPromise, formatValidationPromise]);\n          generateRounds();\n          let data = {\n            kreator: user.email,\n            naziv: name,\n            sudionici: players,\n            pobjeda: win,\n            remi: tie,\n            poraz: loss,\n            igre: games\n          }\n          try {\n            const docRef = await addDoc(ref, data);\n            console.log(docRef.id)\n            localStorage.setItem(1, docRef.id);\n          } catch (err) {\n            console.log(err);\n          }\n          navigate(\"/tour\"); \n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n    const handleNameChange = (e) => {\n        setName(e.target.value)\n    }\n\n    const handlePlayersChange = (e) => {\n        setPlayerString(e.target.value + \"\\n\");\n        let p = playerString.split(\"\\n\");\n        for (let i = 0; i < p.length; ++i) {\n          p[i].trim();\n        }\n        setPlayers(p.filter(elem => elem.trim() !== \"\"));\n    }\n\n    const handleWinChange = (e) => {\n        setWin(e.target.value)\n    }\n\n    const handleTieChange = (e) => {\n        setTie(e.target.value)\n    }\n\n    const handleLossChange = (e) => {\n        setLoss(e.target.value)\n    }\n\n    return(\n        <>\n        <div className=\"buttons-div\">\n            { !isAuthenticated ?\n                <button id=\"login-button\" onClick={() => loginWithRedirect()}>\n                    Prijava\n                </button> : \n                <button id=\"logout-button\" onClick={() => logout()}>\n                    Odjava\n                </button>\n            }\n        </div>\n            {\n                isAuthenticated ?\n                    <div className=\"logged-user-input\">\n                        <form>\n                            <div className='form-div'>\n                                <label>Naziv natjecanja</label>\n                                <input type=\"text\" id=\"name-input\" onChange={handleNameChange}></input>\n                            </div>\n                            <div className='form-div'>\n                                <label>Imena 4-8 natjecatelja (nakon svakog novi redak) </label>\n                                <textarea type=\"text\" id=\"players-input\" onChange={handlePlayersChange}></textarea>\n                            </div>\n                            <div className='form-div'>\n                                <label>Sustav natjecanja (pobjeda / remi / poraz)</label>\n                                <input type='text' id='system-input' onChange={handleWinChange}></input> / \n                                <input type='text' id='system-input' onChange={handleTieChange}></input> / \n                                <input type='text' id='system-input' onChange={handleLossChange}></input>\n                            </div>\n                            {\n                            nameError && <div className='error'>Morate unijeti ime natjecanja.</div>\n                        }\n                            {\n                            formatError && <div className='error'>Pogrešan unos formata, unesite brojeve.</div>\n                        }\n                        {\n                            playersError && <div className='error'>Broj natjecatelja mora biti između 4 i 8.</div>\n                        }\n                        <div id=\"confirm-div\"><button id=\"confirm-button\" type=\"submit\" onClick={handleUserInput}>Unesi</button></div>\n                        </form> \n                    </div>\n                : \"\"\n            }\n            <div className='all-tours'>\n              <div className='all-tours-title'>SVA DOSTUPNA NATJECANJA:</div>\n              <div>\n                {\n                  tournaments.map((element, index) => (\n                    <div className=\"all-tours-lines\" key={index}> • <Link to=\"/tour\" onClick={() => localStorage.setItem(1, element.id)}>{element.naziv}</Link></div>\n                  ))\n                }\n              </div>\n            </div>\n        </>\n    )\n\n}\n\nexport default Body;","/Users/franes/Desktop/PROGRAMIRANJE/WEB DEV/REACT/web2-auth/web2-auth/src/firebase.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":10,"column":13,"nodeType":"36","messageId":"37","endLine":10,"endColumn":30},{"ruleId":"34","severity":1,"message":"38","line":10,"column":40,"nodeType":"36","messageId":"37","endLine":10,"endColumn":44},{"ruleId":"39","severity":1,"message":"40","line":51,"column":7,"nodeType":"41","endLine":51,"endColumn":9,"suggestions":"42"},{"ruleId":"34","severity":1,"message":"43","line":22,"column":19,"nodeType":"36","messageId":"37","endLine":22,"endColumn":27},{"ruleId":"39","severity":1,"message":"40","line":129,"column":9,"nodeType":"41","endLine":129,"endColumn":11,"suggestions":"44"},"no-unused-vars","'loginWithRedirect' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["45"],"'setGames' is assigned a value but never used.",["46"],{"desc":"47","fix":"48"},{"desc":"47","fix":"49"},"Update the dependencies array to be: [ref]",{"range":"50","text":"51"},{"range":"52","text":"51"},[2010,2012],"[ref]",[6306,6308]]